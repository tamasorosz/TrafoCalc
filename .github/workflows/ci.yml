name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python: [3.8.10]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v3.2.4
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: ${{ matrix.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python }}-
      - name: Install
        run: |
          sudo apt install python3-dev
          sudo apt install libqt5xml5 
          sudo apt install libqt5xmlpatterns5
          sudo apt install libqt5core5a
          sudo apt install libumfpack5 
          sudo apt install libmumps-seq-5.2.1
          sudo apt install libmetis5
          sudo apt install liblapack3
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install
      - name: Lint Last Commit
        if: github.event_name == 'push'
        run: |
          poetry run gitlint
      - name: Lint All Commits on Pull Request
        if: github.event_name == 'pull_request'
        run: |
          poetry run gitlint --commits "origin/${{ github.base_ref }}...HEAD"
      - name: Test
        run: |
          poetry run coverage run --module pytest
      - name: Verify test coverage
        run: |
          poetry run coverage xml
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./coverage.xml # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)